import { addProductToCart } from "./global.cart.js";

let productsData = []; // –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
let currencies;

// –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
async function fetchProducts() {
  try {
    const response = await fetch("./api/items.json"); // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ JSON
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }
    productsData = await response.json();
    renderProducts(productsData);
  } catch (error) {
    console.error("Error loading products:", error);
  }
}

// –§—É–Ω–∫—Ü—ñ—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É —Ç–æ–≤–∞—Ä—ñ–≤
function renderProducts(products, rate = 1, currencySymbol = "$") {
  let productsHTML = "";
  for (const product of products) {
    productsHTML += `
        <article class="product-card">
          <a href="#" class="product-card__link">
            <img
              class="product-card__image"
              alt="${product.name}"
              src="${product.image}"
              onerror="this.onerror=null; this.src='img/placeholder.png';"
            />
            ${
              product.promoLabel
                ? `<button type="button" class="btn btn-secondary">${product.promoLabel}</button>`
                : ""
            }
            ${
              product.stockStatus
                ? `<div class="popular-products__badge-bottom-pro popular-products__badge-${product.stockStatus.replace(
                    " ",
                    "-"
                  )}-pro">
                  <div class="badge__${product.stockStatus.replace(" ", "-")}">
                    ${product.stockStatus}
                  </div>
                </div>`
                : ""
            }
          </a>
          <h5 class="product-card__title">
            <a href="#" class="product-card__name">${product.name}</a>
          </h5>
          <div class="prices">
            ${
              product.oldPrice
                ? `<div class="product-card__price-old">${currencySymbol}${(
                    product.oldPrice * rate
                  ).toFixed(2)}</div>`
                : '<div class="product-card__price-old hidden">----------</div>'
            }
            <div class="product-card__price-new">${currencySymbol}${(
              product.price * rate
            ).toFixed(2)}</div>
          </div>
          <button class="btn ${
            product.stockStatus === "out of stock"
              ? "btn-disabled"
              : "btn-primary"
          } card__button--cart" type="button" data-name="${product.name}" data-price="${
      product.price * rate
    }" ${
      product.stockStatus === "out of stock" ? "disabled" : ""
    }>Buy now</button>
        </article>
      `;
  }

  const productsContainer = document.querySelector(".popular-products__list");
  if (!productsContainer) {
    console.error("Element .popular-products__list not found!");
    return;
  }

  productsContainer.innerHTML = productsHTML;

  let cart = []; // –ú–∞—Å–∏–≤ –¥–ª—è —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É

  function addProductToCart(name, price) {
    const product = { name, price }; // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É
    cart.push(product); // –î–æ–¥–∞—î–º–æ —É –º–∞—Å–∏–≤ –∫–æ—à–∏–∫–∞
    updateCartUI(); // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ—à–∏–∫–∞
  }
  
  
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è HTML –∫–æ—à–∏–∫–∞
  function updateCartUI() {
    const cartContainer = document.querySelector(".cart-items"); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–æ—à–∏–∫–∞
    cartContainer.innerHTML = ""; // –û—á–∏—â–∞—î–º–æ –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
  
    if (cart.length === 0) {
      cartContainer.innerHTML = "<p>üõí –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</p>";
      return;
    }
  
    cart.forEach((item, index) => {
      const cartItem = document.createElement("div");
      cartItem.classList.add("cart-item");
      cartItem.innerHTML = `
        <span>${item.name} - $${item.price.toFixed(2)}</span>
        <button class="remove-item" data-index="${index}">‚ùå</button>
      `;
      cartContainer.appendChild(cartItem);
    });
  
    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    document.querySelectorAll(".remove-item").forEach((button) => {
      button.addEventListener("click", (event) => {
        const index = event.target.dataset.index;
        cart.splice(index, 1); // –í–∏–¥–∞–ª—è—î–º–æ —Ç–æ–≤–∞—Ä
        updateCartUI(); // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞
      });
    });
  }

  // –î–æ–¥–∞—î–º–æ –ø–æ–¥—ñ—é –Ω–∞ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ "Buy now"
  document.querySelectorAll(".card__button--cart").forEach((button) => {
    button.addEventListener("click", (event) => {
      const name = event.target.dataset.name;
      const price = parseFloat(event.target.dataset.price);
      console.log(`‚úÖ –î–æ–¥–∞—î–º–æ –≤ –∫–æ—à–∏–∫: ${name} - ${price}`); // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª—ñ
      addProductToCart(name, price);
    });
  });
}

// –§—É–Ω–∫—Ü—ñ—è –∑–º—ñ–Ω–∏ –≤–∞–ª—é—Ç–∏
async function changeCurrency() {
  const currencyName = document.querySelector(".products__currency").value;
  if (!currencies) {
    const response = await fetch(
      "https://api.exchangerate-api.com/v4/latest/USD"
    );
    currencies = await response.json();
  }
  const rate = currencies.rates[currencyName];
  const currencySymbol = currencyName === "USD" ? "$" : currencyName;
  renderProducts(productsData, rate, currencySymbol);
}

// –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
fetchProducts();

// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è –∑–º—ñ–Ω–∏ –≤–∞–ª—é—Ç–∏
document
  .querySelector(".products__currency")
  .addEventListener("change", changeCurrency);
